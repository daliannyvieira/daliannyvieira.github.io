{"version":3,"sources":["webpack://daliannyvieira/./src/templates/blog-post.js","webpack://daliannyvieira/./src/constants/pluralize-reading-time.js"],"names":["Container","styled","animated","Title","rainbow","keyframes","Footer","Button","Twitter","data","pageContext","location","post","markdownRemark","previous","next","publicUrl","fields","slug","useState","toggle","setToggle","useEffect","Layout","Spring","native","to","rotate","opacity","time","style","title","frontmatter","description","excerpt","keywords","published","shortDate","timeToRead","dangerouslySetInnerHTML","__html","html","textDecoration","onClick","navigate","rel","target","href","size","SOCIAL","icon"],"mappings":"kPAaA,IAAMA,GAAYC,QAAOC,gBAAV,0EAAGD,CAAH,6GAWTE,EAAQF,mBAAH,2DAAGA,CAAH,yBAILG,GAAUC,QAAH,mDAKPC,EAASL,uBAAH,4DAAGA,CAAH,yLAeNM,EAASN,uBAAH,4DAAGA,CAAH,6hBA8BNO,EAAUP,oBAAH,6DAAGA,CAAH,kcAqBIG,GA6IjB,EA5Ha,SAAC,GAAqC,IAAnCK,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACTC,EAASH,EAAzBI,eACAC,EAAmBJ,EAAnBI,SAAUC,EAASL,EAATK,KACZC,EAAS,mCAAsCJ,EAAKK,OAAOC,KAEjE,GAA4BC,eAAS,GAA9BC,EAAP,KAAeC,EAAf,KAUA,OARAC,gBAAU,WAEND,GAAU,KAIX,IAGD,gBAACE,EAAA,EAAD,CAAQZ,SAAUA,GAChB,gBAAC,EAAAa,OAAD,CACEC,QAAM,EACNC,GAAI,CACFC,OAAQP,EAAS,OAAS,SAC1BQ,QAASR,EAAS,EAAG,KAGtB,gBC5IoCS,ED4IjCD,EAAH,EAAGA,QAAH,OACC,gBAAC5B,EAAD,CACE8B,MAAO,CACLF,QAASA,IAGb,gBAAC,IAAD,CACEG,MAAK,GAAKnB,EAAKoB,YAAYD,MAC3BE,YAAarB,EAAKoB,YAAYC,aAAerB,EAAKsB,QAClDC,SAAUvB,EAAKoB,YAAYG,WAE3B,gBAAChC,EAAD,KACGS,EAAKoB,YAAYI,UAAY,GAAK,UAClCxB,EAAKoB,YAAYD,OAEpB,6BACGnB,EAAKoB,YAAYK,UADpB,MACkC,KC5JDR,ED6JTjB,EAAK0B,YC5JvC,KAAkBT,EAAO,EAAI,OAAS,OAAtC,eD8JU,2BAASU,wBAAyB,CAAEC,OAAQ5B,EAAK6B,QACjD,gBAACnC,EAAD,KACE,0BACE,0BACGQ,GACC,gBAACP,EAAD,CACEuB,MAAO,CAAEY,eAAe,QACxBC,QAAS,kBAAMC,cAAS9B,EAASG,OAAOC,OACxC2B,IAAI,QAHN,KAKK/B,EAASkB,YAAYD,QAI9B,0BACGhB,GACC,gBAACR,EAAD,CACEuB,MAAO,CAAEY,eAAe,QACxBC,QAAS,kBAAMC,cAAS7B,EAAKE,OAAOC,OACpC2B,IAAI,QAEH9B,EAAKiB,YAAYD,MALpB,QAUN,gBAACvB,EAAD,KACE,2BACE,qBACEsC,OAAO,SACPD,IAAI,+BACJE,KAAI,yCAA2C/B,GAE/C,gBAAC,IAAD,CACEgC,KAAMC,YACNC,KAAMD,YACNlB,MAAK,cAAgBkB","file":"component---src-templates-blog-post-js-617647d429ed67cb9f7b.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { navigate, graphql } from 'gatsby';\nimport styled, { keyframes } from 'styled-components'\nimport { Spring, animated } from 'react-spring'\n\nimport Seo from '../components/seo';\nimport Layout from \"../components/Layout\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport SOCIAL from '../constants/social';\nimport pluralizeReadingTime from \"../constants/pluralize-reading-time\";\n\nconst Container = styled(animated.div)`\n  width: 100%;\n  padding: 1rem;\n\n  p, ul, ol, blockquote p {\n    font-size: 1.15rem;\n    line-height: 2rem;\n    margin: 1.45rem 0 1rem;\n  }\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 1rem;\n`;\n\nconst rainbow = keyframes`\n  50% {\n    transform: translateY(20px) scaleY(0.75);\n  }\n`\nconst Footer = styled.footer`\n  margin-top: 2rem;\n  border-top: 2px solid var(--color-primary);\n  height: 100px;\n\n  ul {\n    list-style: none;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    flex-wrap: wrap;\n  }\n`;\n\nconst Button = styled.button`\n  margin-top: 0.45rem;\n  border-radius: 12px;\n  transform: translateY(-4px);\n  transition: all 50ms cubic-bezier(0.3, 0.7, 0.4, 1) 0s;\n  will-change: transform;\n  padding: 0.25rem 0.75rem;\n  \n  border-radius: 12px;\n  cursor: pointer;\n  outline-offset: 4px;\n  \n  border: 1px solid var(--color-primary);\n  color: var(--color-primary);\n  border-bottom: 6px solid var(--color-primary);\n  background: var(--color-backgroundHigh);\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 300px;\n\n  font-size: 1rem;\n\n  &:active {\n    transform: translateY(-2px);\n    border-bottom: 1px solid var(--color-primary);\n  }\n`;\n\nconst Twitter = styled.div`\n  position: absolute;\n  border-color: var(--color-primary);\n  border-style: solid;\n  border-width: 1px;\n  padding: 0.75rem;\n  cursor: pointer;\n  transition: all 0.5s ease;\n  background: var(--color-primary);\n\n  div {\n    display: flex;\n    align-items: center;\n  }\n\n  svg {\n    color: #fff;\n  }\n\n  @media (min-width: 992px) {\n    background: var(--color-primary);\n    animation: ${rainbow} 3s linear infinite;\n\n    svg {\n      color: transparent;\n    }\n\n    &:hover {\n      svg {\n        color: var(--color-primary);\n      }\n      width: 50px;\n      background: #fff;\n      transform: translateY(0) scaleY(1);\n    }\n  }\n`;\n\nconst Blog = ({ data, pageContext, location }) => {\n  const { markdownRemark: post } = data;\n  const { previous, next } = pageContext;\n  const publicUrl = `https://daliannyvieira.github.io${post.fields.slug}`;\n\n  const [toggle, setToggle] = useState(true)\n\n  useEffect(() => {\n    function handleToggle() {\n      setToggle(false)\n    }\n\n    handleToggle();\n  }, []);\n\n  return (\n    <Layout location={location}>\n      <Spring\n        native\n        to={{\n          rotate: toggle ? '0deg' : '180deg',\n          opacity: toggle ? 0: 1,\n        }}\n        >\n        {({ opacity }) => (\n          <Container\n            style={{\n              opacity: opacity,\n            }}\n          >\n          <Seo\n            title={`${post.frontmatter.title}`}\n            description={post.frontmatter.description || post.excerpt}\n            keywords={post.frontmatter.keywords}\n          />\n            <Title>\n              {post.frontmatter.published ? '' : 'DRAFT: '}\n              {post.frontmatter.title}\n            </Title>\n            <small>\n              {post.frontmatter.shortDate} — {' '}\n              {pluralizeReadingTime(post.timeToRead)}\n            </small>\n            <article dangerouslySetInnerHTML={{ __html: post.html }} />\n            <Footer>\n              <ul>\n                <li>\n                  {previous && (\n                    <Button\n                      style={{ textDecoration: `none` }}\n                      onClick={() => navigate(previous.fields.slug)}\n                      rel=\"prev\"\n                    >\n                      ← {previous.frontmatter.title}\n                    </Button>\n                  )}\n                </li>\n                <li>\n                  {next && (\n                    <Button\n                      style={{ textDecoration: `none` }}\n                      onClick={() => navigate(next.fields.slug)}\n                      rel=\"next\"\n                    >\n                      {next.frontmatter.title} →\n                    </Button>\n                  )}\n                </li>\n              </ul>\n              <Twitter>\n                <div>\n                  <a\n                    target=\"_blank\"\n                    rel=\"nofollow noopener noreferrer\"\n                    href={`https://twitter.com/intent/tweet?text=${publicUrl}`}\n                  >\n                    <FontAwesomeIcon\n                      size={SOCIAL[1].size}\n                      icon={SOCIAL[1].icon}\n                      title={`Link to my ${SOCIAL[1].kind}`}\n                    />\n                  </a>\n                </div>\n              </Twitter>\n            </Footer>\n          </Container>\n        )}\n      </Spring>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      timeToRead\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        shortDate: date(locale: \"pt-br\", formatString: \"MMMM, YYYY\")\n        longDate: date(formatString: \"MMMM DD, YYYY, h:mm:ss a\")\n        description\n        categories\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 1200) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        coverAuthor\n        coverOriginalUrl\n        keywords\n        published\n      }\n    }\n  }\n`;\n\nexport default Blog","export default function pluralizeReadingTime(time) {\n  return `${time} ${time > 1 ? 'mins' : 'min'} de leitura`;\n}\n"],"sourceRoot":""}